var crypto = require('./cryptofunc');

// PARAMETERS

var TAG_ACCEPTED = "00"; // (hex encoded) tag 

// SHORTCUTS

var pair = crypto.concatenate;
var enc  = crypto.pke_encrypt;
var dec  = crypto.pke_decrypt;

// Returns a new voter client instance
exports.create = function(electionID, colServEncKey, colServVerifKey, finServEncKey)
{
    ///
    // Method createBallot
    //
    // Returns
    //          Enc_CS(electionID, innerBallot )
    //
    // where    innerBallot = Enc_FS(electionID, choice, receiptID)
    //
    // Arguments:
    //   hexenc   electionID
    //   hexenc   colServEncKey
    //   hexenc   finServEncKey
    //   int      choice
    //
    // Returns:
    //   object ballotInfo with fields: ballot, innerBallot, nonce
    //
    function createBallot (choice) {
        choice = crypto.int32ToHexString(choice);
        var nonce = crypto.nonce();
        var innerBallot = enc(finServEncKey, pair(electionID, pair(nonce, choice)));
        var ballot = enc(colServEncKey, pair(electionID, innerBallot));

        return { ballot: ballot, nonce: nonce, innerBallot: innerBallot };
    }

    ///
    // Method validateReceipt
    //
    // Returns true if the given receipt is valid (w.r.t. the given
    // inner ballot and election id).
    //
    function validateReceipt (receipt, innerBallot) {
        message = pair(TAG_ACCEPTED, pair(electionID, innerBallot));
        return crypto.verifsig(colServVerifKey, message, receipt); 
    }

    return {createBallot: createBallot, validateReceipt: validateReceipt};
}

